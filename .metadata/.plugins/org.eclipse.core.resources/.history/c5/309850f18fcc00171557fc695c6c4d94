package Stock.Stock;

import java.io.IOException;
import java.util.ArrayList;
import java.util.LinkedHashMap;

import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.*;
import org.apache.http.impl.client.*;
import org.apache.http.util.EntityUtils;
import org.codehaus.jackson.JsonProcessingException;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.codehaus.jackson.map.DeserializationConfig.Feature;
import org.codehaus.jackson.map.ObjectMapper;
import org.testng.annotations.Test;



//@JsonIgnoreProperties(ignoreUnknown = true)
public class ScreenerData {
  @Test
  public void getScreenerData() throws ClientProtocolException, IOException,JsonProcessingException {
	  
	  ObjectMapper mapper = new ObjectMapper();
	  //mapper.configure(Feature.FAIL_ON_UNKNOWN_PROPERTIES, false);
	  CloseableHttpClient httpclient = HttpClients.createDefault();
	  HttpGet httpGet = new HttpGet("https://www.screener.in/api/company/search/?q=AMARA+RAJA");
	  CloseableHttpResponse responseCompanyName = httpclient.execute(httpGet);
	  String json = EntityUtils.toString(responseCompanyName.getEntity(), "UTF-8");
	  ResponseContent[] responseContent = mapper.readValue(json, ResponseContent[].class);
  
      String baseUrl = "http://screener.in/api"+responseContent[0].getUrl();
      HttpGet httpGetScreener = new HttpGet(baseUrl);
      CloseableHttpResponse responseScreener = httpclient.execute(httpGetScreener);
	  String screenerString = EntityUtils.toString(responseScreener.getEntity(), "UTF-8").replaceAll("2005-03-31", "Mar_2005").replaceAll("2006-03-31", "Mar_2006").replaceAll("2007-03-31", "Mar_2007").replaceAll("2008-03-31", "Mar_2008").replaceAll("2009-03-31", "Mar_2009").replaceAll("2010-03-31", "Mar_2010").replaceAll("2011-03-31", "Mar_2011").replaceAll("2012-03-31", "Mar_2012").replaceAll("2013-03-31", "Mar_2013").replaceAll("2014-03-31", "Mar_2014").replaceAll("2015-03-31", "Mar_2015").replaceAll("2016-03-31", "Mar_2016").replaceAll("2017-03-31", "Mar_2017").replaceAll("2018-03-31", "Mar_2018").replaceAll("2014-12-31", "Dec_2014").replaceAll("2015-06-30", "June_2015").replaceAll("2015-09-30", "Sep_2015").replaceAll("2015-12-31", "Dec_2015").replaceAll("2016-06-30", "June_2016").replaceAll("2016-09-30", "Sep_2016").replaceAll("2016-12-31", "Dec_2016").replaceAll("2017-06-30", "June_2017").replaceAll("2017-09-30", "Sep_2017").replaceAll("2017-12-31", "Dec_2017");
	  ScreenerObject screenerObject = mapper.readValue(screenerString, ScreenerObject.class);
	  @SuppressWarnings("unchecked")
	LinkedHashMap<String,Double> val = (LinkedHashMap<String, Double>) screenerObject.getnumber_set().getquarters().get(9).get(1);
	  Double TTM = val.get("Dec_2016")+val.get("Mar_2017")+val.get("June_2017")+val.get("Sep_2017");
	  @SuppressWarnings("unchecked")
	LinkedHashMap<String,Double> PreviousYear =  (LinkedHashMap<String, Double>) screenerObject.getnumber_set().getannual().get(9).get(1);
	  Double PreviousYearNetProfit = PreviousYear.get("Mar_2017");
	  if(TTM<PreviousYearNetProfit)
	  {
		  LinkedHashMap<String,Double> LastQuarterResults =  (LinkedHashMap<String, Double>) screenerObject.getnumber_set().getquarters().get(9).get(1);
		  Double LatestQuarter = LastQuarterResults.get("Sep_2017");
	  }
  } 
}


